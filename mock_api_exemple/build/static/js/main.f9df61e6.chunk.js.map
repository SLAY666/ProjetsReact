{"version":3,"sources":["constantes.js","components/Pokemon.js","components/ManagePokemonsHooks.js","components/FormAjouterPokemon.js","components/AjouterPokemon.js","components/FormEditerPokemonHooks.js","components/PageNotFound.js","components/BoutonAjouterPokemon.js","components/BoutonRetourAccueil.js","components/App.js","serviceWorker.js","index.js"],"names":["API","Pokemon","props","Card","Body","Image","src","this","urlPhoto","rounded","width","to","nom","id","React","Component","ManagePokemonsHooks","useState","donneesRecues","setDonneesRecues","a","fetch","response","json","reponseDeApi","ok","Error","statusText","console","log","useEffect","getPokemons","join","map","key","i","name","_id","picture","FormAjouterPokemon","state","photo","setErrors","handleAdd","bind","handlePhoto","addPokemon","attaque1","attaque2","method","headers","body","JSON","stringify","abilities","jsonResponse","history","push","toast","success","event","preventDefault","document","getElementById","value","photos","setState","Container","Row","Col","Form","Group","controlId","Label","Control","type","placeholder","onBlur","Button","variant","onClick","AjouterPokemon","FormEditerPokemonHooks","location","search","substring","length","pokemonID","setPhotos","error","getPokemonInfos","defaultValue","editPokemon","className","PageNotFound","BoutonAjouterPokemon","BoutonRetourAccueil","App","useLocation","autoClose","hideProgressBar","path","exact","component","pathname","startsWith","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","e","request","url","respondWith","caches","alert"],"mappings":"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","file":"static/js/main.f9df61e6.chunk.js","sourcesContent":["export const API = \"https://crudcrud.com/api/b4c4f1e0a7da4c13b6538c6d47430aed/pokemons/\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {Card,Image} from \"react-bootstrap\"\r\n\r\nexport class Pokemon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Card>\r\n        <Card.Body>\r\n          <Image src={this.props.urlPhoto} rounded width=\"125\"/>\r\n          <Link to={\"Pokemons/\" + this.props.nom + \"?id=\" + this.props.id}>\r\n            <h1>{this.props.nom}</h1>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>     \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {API} from \"../constantes\";\r\nimport { Pokemon } from \"./Pokemon\";\r\n\r\nfunction ManagePokemonsHooks() {\r\n  const [donneesRecues, setDonneesRecues] = useState([]);\r\n\r\n  //Ajout de la gestion des erreurs\r\n  useEffect(() => {\r\n    getPokemons();\r\n  }, [donneesRecues.join(\",\")]); //Si on enlève le second paramètre, on obtient une boucle infinie.\r\n\r\n  async function getPokemons() {\r\n    try {\r\n      const response = await fetch(API);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Affichage de la liste de tous les Pokemons</h1>\r\n      {donneesRecues.map((key, i) => (\r\n        <Pokemon nom={key.name} id={key._id} key={key.name + key._id} urlPhoto={key.picture}></Pokemon>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManagePokemonsHooks;\r\n","import React from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {API} from \"../constantes\";\r\nimport {toast} from \"react-toastify\";\r\n\r\nexport class FormAjouterPokemon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {photo: \"\", setErrors : {}};\r\n\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n    this.handlePhoto = this.handlePhoto.bind(this);\r\n    this.addPokemon = this.addPokemon.bind(this);\r\n  }\r\n\r\n  async addPokemon(nom,photo,attaque1, attaque2) { \r\n    try{ \r\n      const response = await fetch(API, { \r\n        method:'POST', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body:JSON.stringify({\r\n          name: nom,\r\n          picture: photo,\r\n          abilities: [\r\n            {\r\n              name: attaque1\r\n            },\r\n            {\r\n              name: attaque2\r\n            }\r\n          ]\r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        const jsonResponse = await response.json(); \r\n        this.props.history.push(\"/\");\r\n        toast.success(\"Ajout du Pokémon \" + nom);\r\n\r\n        return jsonResponse; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n}\r\n\r\n\r\n  handleAdd(event){\r\n    event.preventDefault();\r\n    \r\n    const nom = document.getElementById('nomPokemon').value;\r\n    const photo = document.getElementById('photoPokemon').value;\r\n    const attaque1 = document.getElementById('attaque1').value;\r\n    const attaque2 = document.getElementById('attaque2').value;\r\n\r\n    this.addPokemon(nom,photo,attaque1,attaque2);\r\n  }\r\n\r\n  handlePhoto(event){\r\n    const photos = document.getElementById('photoPokemon').value;\r\n    this.setState( {photo : photos});\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log(this.props.history);\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group controlId=\"nomPokemon\">\r\n                <Form.Label>Nom du Pokemon</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom du Pokemon\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"photoPokemon\">\r\n                <Form.Label>URL d'une photo du Pokemon</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer une URL valide\" onBlur={this.handlePhoto}/>\r\n              </Form.Group>\r\n              {this.state.photo !== \"\" && <Image src={this.state.photo} rounded width=\"125\"/>}\r\n              <Form.Group controlId=\"attaque1\">\r\n                <Form.Label>Nom de l'attaque 1</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de l'attaque 1\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"attaque2\">\r\n                <Form.Label>Nom de l'attaque 2</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de l'attaque 2\" />\r\n              </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={this.handleAdd}>\r\n                Enregistrer\r\n            </Button>\r\n            </Form>  \r\n            </Col>    \r\n          </Row>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { FormAjouterPokemon } from \"./FormAjouterPokemon\";\r\n\r\nexport class AjouterPokemon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  } \r\n  render() {\r\n    return (\r\n      <>\r\n        <FormAjouterPokemon history={this.props.history} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React , {useState , useEffect} from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {API} from \"../constantes\";\r\nimport {toast} from \"react-toastify\"\r\n\r\nfunction FormEditerPokemonHooks(props){\r\n  const [donneesRecues , setDonneesRecues] = useState({name: '', picture:\"\", abilities : [\"\",\"\"] });\r\n  const [pokemonID , setPokemonID] = useState(props.location.search.substring(4,props.location.search.length));\r\n  const [photos , setPhotos] = useState(\"\");\r\n  //Ajout de la gestion des erreurs\r\n  useEffect(() => {\r\n    getPokemonInfos();\r\n  },[]); //Si on enlève le second paramètre, on obtient une boucle infinie.\r\n\r\n  //On récupère le Pokemon pour ensuite remplir le formulaire.\r\n  async function getPokemonInfos() {\r\n    try {\r\n      \r\n      const response = await fetch(API + pokemonID);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function editPokemon(nom,photo,attaque1, attaque2) { \r\n    try{ \r\n      const response = await fetch(API + pokemonID, { \r\n        method:'PUT', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body:JSON.stringify({\r\n          name: nom,\r\n          picture: photo,\r\n          abilities: [\r\n            {\r\n              name: attaque1\r\n            },\r\n            {\r\n              name: attaque2\r\n            }\r\n          ]\r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        props.history.push(\"/\");\r\n        toast.success(\"Modification du Pokémon \" + nom);\r\n\r\n        return response; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n}\r\n\r\nasync function removePokemon() { \r\n    try{ \r\n    const response = await fetch(API + pokemonID, { \r\n      method:'delete', \r\n    }); \r\n    if(response.ok){ \r\n      //const jsonResponse = await response.json(); \r\n      props.history.push(\"/\");\r\n      toast.error(\"Supression du Pokémon \");\r\n\r\n      return response; \r\n    } \r\n    throw new Error('Request failed!'); \r\n} \r\n catch(error){ \r\n    console.log(error); \r\n } \r\n}\r\n\r\n  function handleEdit(event){\r\n    event.preventDefault();\r\n    \r\n    const nom = document.getElementById('nomPokemon').value;\r\n    const photo = document.getElementById('photoPokemon').value;\r\n    const attaque1 = document.getElementById('attaque1').value;\r\n    const attaque2 = document.getElementById('attaque2').value;\r\n\r\n    editPokemon(nom,photo,attaque1,attaque2);\r\n  }\r\n\r\n  function handlePhoto(event){\r\n    const photos = document.getElementById('photoPokemon').value;\r\n    setPhotos(photos);\r\n  }\r\n    return (\r\n      <>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <Form.Group controlId=\"nomPokemon\">\r\n                <Form.Label>Nom du Pokemon</Form.Label>\r\n                <Form.Control type=\"text\" defaultValue={donneesRecues.name}/> {/*/ Faire le test avec value*/}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"photoPokemon\">\r\n                <Form.Label>URL d'une photo du Pokemon</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer une URL valide\" onBlur={handlePhoto} defaultValue={donneesRecues.picture}/>\r\n              </Form.Group>\r\n              {donneesRecues.picture !== \"\" && <Image src={donneesRecues.picture} rounded width=\"125\"/>}\r\n              <Form.Group controlId=\"attaque1\">\r\n                <Form.Label>Nom de l'attaque 1</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de l'attaque 1\" defaultValue={donneesRecues.abilities[0].name}/>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"attaque2\">\r\n                <Form.Label>Nom de l'attaque 2</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Entrer le nom de l'attaque 2\" defaultValue={donneesRecues.abilities[1].name}/>\r\n              </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\" onClick={handleEdit}>\r\n                Enregistrer\r\n            </Button>\r\n            </Form>  \r\n            </Col>    \r\n          </Row>\r\n          <p className=\"btn btn-danger mt-5\" onClick={removePokemon}>Supprimer le Pokemon</p>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default FormEditerPokemonHooks;","import React from \"react\";\r\n\r\nexport class PageNotFound extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <img src={\"https://cdn.dribbble.com/users/1592487/screenshots/6678531/404.png\"} \r\n        width=\"1400px\"/>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class BoutonAjouterPokemon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Link to=\"/ajouterPokemon\" className=\"btn btn-primary mt-5\">\r\n          Ajouter un Pokemon\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class BoutonRetourAccueil extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <> \r\n        <Link to=\"/\" className=\"btn btn-primary mt-5\">\r\n          Retour à la liste de Pokémons\r\n        </Link>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport  ManagePokemonsHooks  from \"./ManagePokemonsHooks\"; \r\nimport { AjouterPokemon } from \"./AjouterPokemon\"; \r\nimport  FormEditerPokemonHooks  from \"./FormEditerPokemonHooks\";\r\nimport { PageNotFound } from \"./PageNotFound\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { BoutonAjouterPokemon } from \"./BoutonAjouterPokemon\";\r\nimport { useLocation } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BoutonRetourAccueil } from \"./BoutonRetourAccueil\";\r\n\r\nfunction App() {\r\n  let location = useLocation();\r\n  return (\r\n    <>\r\n    <ToastContainer autoClose={3000} hideProgressBar />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={ManagePokemonsHooks} />\r\n        <Route path=\"/ajouterPokemon\" component={AjouterPokemon} />\r\n        <Route path=\"/Pokemons/:nom\" component={FormEditerPokemonHooks} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n      {(location.pathname != \"/ajouterPokemon\" && !location.pathname.startsWith(\"/Pokemons\")) && <BoutonAjouterPokemon/> }\r\n      {(location.pathname != \"/\") && <BoutonRetourAccueil/> }\r\n      <br></br>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      \r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n\r\n    window.addEventListener('fetch', function(e) {\r\n      console.log('[demoPWA - ServiceWorker] Fetch event fired.', e.request.url);\r\n      e.respondWith(\r\n          caches.match(e.request).then(function(response) {\r\n              if (response) {\r\n                  console.log('[demoPWA - ServiceWorker] Retrieving from cache...');\r\n                  return response;\r\n              }\r\n              console.log('[demoPWA - ServiceWorker] Retrieving from URL...');\r\n              return fetch(e.request).catch(function (e) {\r\n                 alert('You appear to be offline, please try again when back online');\r\n              });\r\n          })\r\n      );\r\n  });\r\n\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"; \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n      \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();"],"sourceRoot":""}